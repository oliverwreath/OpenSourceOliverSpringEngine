-- CREATE DATABASE IF NOT EXISTS
CREATE SCHEMA IF NOT EXISTS testdb;

drop table if exists testdb.admins;

drop table if exists testdb.authorities;

drop table if exists testdb.courses;

drop table if exists testdb.drop_down_list_entities;

drop table if exists testdb.members;

drop table if exists testdb.order_courses;

drop table if exists testdb.order_videos;

drop table if exists testdb.users;

drop table if exists testdb.videos;


    create table testdb.admins (
       id bigint generated by default as identity,
        created_by varchar(255),
        created_on timestamp,
        updated_by varchar(255),
        updated_on timestamp,
        city varchar(255),
        country varchar(255),
        email varchar(255),
        mobile varchar(255),
        state varchar(255),
        street_address varchar(255),
        zipcode varchar(255),
        gender varchar(255),
        landing_offer varchar(255),
        major varchar(255),
        name varchar(255),
        personal_interest varchar(255),
        school varchar(255),
        year_of_graduation integer,
        user_id bigint,
        primary key (id)
    );

    create table testdb.authorities (
       id bigint generated by default as identity,
        authority varchar(255),
        created_by varchar(255),
        created_on timestamp,
        updated_by varchar(255),
        updated_on timestamp,
        user_id bigint,
        primary key (id)
    );

    create table testdb.courses (
       id bigint generated by default as identity,
        catalog varchar(255),
        course_name varchar(255),
        course_price decimal(13,5),
        created_by varchar(255),
        created_on timestamp,
        updated_by varchar(255),
        updated_on timestamp,
        purchase_count bigint,
        purchase_sum bigint,
        view_count bigint,
        primary key (id)
    );

    create table testdb.drop_down_list_entities (
       id varchar(255) not null,
        created_by varchar(255),
        created_on timestamp,
        updated_by varchar(255),
        updated_on timestamp,
        my_values varchar(255),
        primary key (id)
    );

    create table testdb.members (
       id bigint generated by default as identity,
        created_by varchar(255),
        created_on timestamp,
        updated_by varchar(255),
        updated_on timestamp,
        city varchar(255),
        country varchar(255),
        email varchar(255),
        mobile varchar(255),
        state varchar(255),
        street_address varchar(255),
        zipcode varchar(255),
        video_id bigint,
        gender varchar(255),
        is_vip boolean,
        job_target varchar(255),
        landing_offer varchar(255),
        major varchar(255),
        name varchar(255),
        personal_interest varchar(255),
        school varchar(255),
        year_of_graduation integer,
        user_id bigint,
        primary key (id)
    );

    create table testdb.order_courses (
       id bigint generated by default as identity,
        catalog varchar(255),
        course_name varchar(255),
        created_by varchar(255),
        created_on timestamp,
        updated_by varchar(255),
        updated_on timestamp,
        purchase_count bigint,
        purchase_sum bigint,
        view_count bigint,
        order_type varchar(255),
        course_id bigint not null,
        member_id bigint not null,
        primary key (id)
    );

    create table testdb.order_videos (
       id bigint generated by default as identity,
        catalog varchar(255),
        course_name varchar(255),
        created_by varchar(255),
        created_on timestamp,
        updated_by varchar(255),
        updated_on timestamp,
        purchase_count bigint,
        purchase_sum bigint,
        view_count bigint,
        order_type varchar(255),
        member_id bigint not null,
        video_id bigint not null,
        primary key (id)
    );

    create table testdb.users (
       id bigint generated by default as identity,
        created_by varchar(255),
        created_on timestamp,
        updated_by varchar(255),
        updated_on timestamp,
        enabled boolean,
        password varchar(255),
        user_email varchar(255),
        user_type varchar(255),
        primary key (id)
    );

    create table testdb.videos (
       id bigint generated by default as identity,
        catalog varchar(255),
        course_name varchar(255),
        created_by varchar(255),
        created_on timestamp,
        updated_by varchar(255),
        updated_on timestamp,
        purchase_count bigint,
        purchase_sum bigint,
        view_count bigint,
        video_link varchar(255),
        video_name varchar(255),
        video_price decimal(13,5),
        course_id bigint,
        primary key (id)
    );

    alter table testdb.admins
       add constraint FKgc8dtql9mkq268detxiox7fpm
       foreign key (user_id)
       references testdb.users;

    alter table testdb.authorities
       add constraint FKk91upmbueyim93v469wj7b2qh
       foreign key (user_id)
       references testdb.users;

    alter table testdb.members
       add constraint FKpj3n6wh5muoeakc485whgs3x5
       foreign key (user_id)
       references testdb.users;

    alter table testdb.order_courses
       add constraint FK28cttouuwyofclhcd9ho1dqf9
       foreign key (course_id)
       references testdb.courses;

    alter table testdb.order_courses
       add constraint FKime3l43iftmbc8a88utvygqyh
       foreign key (member_id)
       references testdb.members;

    alter table testdb.order_videos
       add constraint FKcb7gt15m2tpxdhd7lkkko7r6g
       foreign key (member_id)
       references testdb.members;

    alter table testdb.order_videos
       add constraint FKb31b9n8c7an13y5hhrr7f67k0
       foreign key (video_id)
       references testdb.videos;

    alter table testdb.videos
       add constraint FKrccvc1a5qx2dqsyienwhuk66j
       foreign key (course_id)
       references testdb.courses;

